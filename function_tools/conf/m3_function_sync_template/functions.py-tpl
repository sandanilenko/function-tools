from {{ strategy.function_class_module }} import (
    {{ strategy.function_class_name }},
)

from web_bb.core.users.api import (
    get_current_user_enterprise_id,
)

from {{ m3_function_python_path }}.helpers import (
    {{ camel_case_m3_function_name }}FunctionHelper,
)
from {{ m3_function_python_path }}.validators import (
    {{ camel_case_m3_function_name }}FunctionValidator,
)


class {{ camel_case_m3_function_name }}Function({{ strategy.function_class_name }}):
    """
    Функция "{{ function_verbose_name }}"
    """

    verbose_name = '{{ function_verbose_name }}'

    def __init__(
        self,
        *args,
        **kwargs,
    ):
        self._ent_id = get_current_user_enterprise_id()

        super().__init__(*args, **kwargs)

        # Ключ результата работы функции, используется в презентере
        # self.result.key =
        # Сообщение об успешном выполнении функции
        # self.result.message =

    def _prepare_helper_class(self):
        """
        Возвращает класс помощника функции
        """
        return {{ camel_case_m3_function_name }}FunctionHelper

    def _prepare_helper(self):
        """
        Создание помощника выполнения функции
        """
        helper_class = self._prepare_helper_class()

        self._helper = helper_class(
            ent_id=self._ent_id,
        )

    def _prepare_validator_class(self):
        """
        Возвращает класс валидатора функции
        """
        return {{ camel_case_m3_function_name }}FunctionValidator

    def _prepare_validator(self):
        """
        Создание валидатора функции
        """
        validator_class = self._prepare_validator_class()

        self._validator = validator_class()

    def _prepare(self):
        """
        Выполнение действий функций системы
        """
        if self.result.has_not_errors:
            pass
